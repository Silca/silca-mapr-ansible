- name: ELK - Clean | Stop Service on ha nodes
  service: name={{ item }} state=stopped enabled=false
  with_items:
    - elasticsearch
    - kibana
    - logstash
  when: "{{ inventory_hostname in groups['mapr-ha-node']}}"
  ignore_errors: true

- name: ELK - Clean | Stop Service on Mapr nodes
  service: name={{ item }} state=stopped enabled=false
  with_items:
    - logstash
    - filebeat
  when: "{{ inventory_hostname in groups['mapr-node']}}"
  ignore_errors: true

- name: ELK - Clean | Clean packages on Mapr node
  package: name="{{ item }}" state=absent
  with_items:
    - filebeat
  when: "{{ inventory_hostname in groups['mapr-node'] }}"

- name: ELK - Clean | Clean packages on Ha node
  package: name="{{ item }}" state=absent
  with_items:
    - elasticsearch
    - python-httplib2
    - filebeat
    - kibana
    - logstash
  when: "{{ inventory_hostname in groups['mapr-ha-node'] }}"

- name: ELK - Clean | Delete old directories on Mapr-Node
  file: path="{{ item }}" state=absent
  with_items:
      - /etc/yum.repos.d/elastic_search.repo
      - /etc/yum.repos.d/elastic-beats.repo
      - /etc/yum.repos.d/logstash.repo
      - /etc/yum.repos.d/kibana.repo
      - /etc/logstash/
      - /etc/filebeat
      - /opt/kibana
  notify: Invalidate Yum Cache
  when: "{{ inventory_hostname in groups['mapr-node'] }}"


- name: ELK - Clean | Delete old directories on Mapr ha-node
  file: path="{{ item }}" state=absent
  with_items:
      - /etc/yum.repos.d/elastic_search.repo
      - /etc/yum.repos.d/elastic-beats.repo
      - /etc/yum.repos.d/logstash.repo
      - /etc/yum.repos.d/kibana.repo
      - /etc/elasticsearch
      - /data/elasticsearch
      - /etc/logstash/
      - /etc/filebeat
      - /opt/kibana
  notify: Invalidate Yum Cache
  when: "{{ inventory_hostname in groups['mapr-ha-node'] }}"