- name: Start Zookeeper
  service: name=mapr-zookeeper state=started
  when: inventory_hostname in groups['mapr-zookeeper']

- name: Restart Zookeeper
  service: name=mapr-zookeeper state=restarted
  when: inventory_hostname in groups['mapr-zookeeper']

- name: Restart Warden
  service: name={{ item }} state=restarted
  with_items:
    - mapr-zookeeper
    - mapr-warden
  when: inventory_hostname in groups['mapr-node']
  notify:
    - Check Mapr fs using Hadoop ls command
    - Check Mapr nfs mount using nfs mount (basic and premium)
  ignore_errors: true

- name: Check Mapr nfs mount using nfs mount (basic and premium)
  command: ls /mapr/
  register: nfs_result
  until: nfs_result.stdout.find('{{ mapr.cluster_name }}') != -1
  retries: 30
  when: licence_type != 'basic' and inventory_hostname in groups['mapr-node']

- name: Check Mapr fs using Hadoop ls command
  command: hadoop fs -ls /
  register: hdfs_result
  until: hdfs_result.stdout.find('var') != -1
  retries: 30
  when: inventory_hostname in groups['mapr-node']

- name: Alternatives Java
  alternatives: name="{{ item.name }}" path="{{ item.path }}"
  with_items:
    - { name : "java", path: "/usr/lib/jvm/jre-1.8.0-openjdk.x86_64/bin/java"}
    - { name : "javac", path: "/usr/lib/jvm/java-1.8.0-openjdk.x86_64/bin/javac"}
  tags: alternatives


- name: Restart Drill
  command: maprcli node services -action restart -name drill-bits -nodes {{ inventory_hostname }}

- name: Restart Hue
  command: maprcli node services -action restart -name hue -nodes {{ inventory_hostname }}

- name: Restart MCS
  command: maprcli node services -action restart -name webserver -nodes {{ inventory_hostname }}