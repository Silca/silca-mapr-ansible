---

#### spark-defaults.conf
- name: MapR | Spark | Enable dynamic allocation
  lineinfile:
    dest: "/opt/mapr/spark/spark-{{ mapr_spark_version }}/conf/spark-defaults.conf"
    regexp: "spark.dynamicAllocation.enabled"
    line: "spark.dynamicAllocation.enabled \t{{ spark_enable_dynamic_allocation }} "

- name: MapR | Spark | Enable suffle service
  lineinfile:
    dest: "/opt/mapr/spark/spark-{{ mapr_spark_version }}/conf/spark-defaults.conf"
    regexp: "spark.shuffle.service.enabled"
    line: "spark.shuffle.service.enabled \t\t{{ spark_shuffle_service_enabled  }}"

- name: MapR | Spark | Set dynamic min executors
  lineinfile:
    dest: "/opt/mapr/spark/spark-{{ mapr_spark_version }}/conf/spark-defaults.conf"
    regexp: "spark.dynamicAllocation.minExecutors"
    line: "spark.dynamicAllocation.minExecutors \t{{ spark_dynamicAllocation_minExecutors }}"

- name: MapR | Spark | Set executor instances number
  lineinfile:
    dest: "/opt/mapr/spark/spark-{{ mapr_spark_version }}/conf/spark-defaults.conf"
    regexp: "spark.executor.instances"
    line: "spark.executor.instances \t\t{{ spark_executor_instances }}"


#### yarn-site.xml
- name: MapR | Spark | Configure hadoop yarn-site.xml
  blockinfile:
    dest: /opt/mapr/hadoop/hadoop-{{ mapr_hadoop_version }}/etc/hadoop/yarn-site.xml
    insertbefore: "</configuration>"
    marker: "<!-- {mark} ANSIBLE MANAGED BLOCK -->"
    block: |
        <property>
          <name>yarn.nodemanager.aux-services</name>
          <value>mapreduce_shuffle,mapr_direct_shuffle,spark_shuffle</value>
        </property>
        <property>
          <name>yarn.nodemanager.aux-services.spark_shuffle.class</name>
          <value>org.apache.spark.network.yarn.YarnShuffleService</value>
        </property>

#### Add spark mapr yarn shuffle jar to mapr yarn lib directory
- name: MapR | Spark | Compute the spark yarn shuffle name
  shell: ls /opt/mapr/spark/spark-{{ mapr_spark_version }}/lib/spark-{{ mapr_spark_version }}-*-yarn-shuffle.jar
  register: sparkjars
  when: mapr_spark_version != "2.1.0"

#### Add spark mapr yarn shuffle jar to mapr yarn lib directory
- name: MapR | Spark | Compute the spark yarn shuffle name
  shell: ls /opt/mapr/spark/spark-{{ mapr_spark_version }}/yarn/spark-{{ mapr_spark_version }}-*-yarn-shuffle.jar
  register: sparkjars
  when: mapr_spark_version == "2.1.0" 


- name: MapR | Spark | Add Spark Shuffle Service to yarn lib directory
  copy:
    remote_src=yes
    src={{ item }}
    dest=/opt/mapr/hadoop/hadoop-{{ mapr_hadoop_version }}/share/hadoop/yarn/lib
  with_items: "{{ sparkjars.stdout_lines | default([]) }}"

#### Restart node manager
- name: MapR | Spark | Restart the node manager
  command: maprcli node services -name nodemanager -action restart -nodes {{ inventory_hostname }}

- name: Mapr | Spark | Wait for port {{ nodemanager.rpc.port }}
  wait_for: port={{ nodemanager.rpc.port }}

- name: Mapr | Spark | Wait for port {{ nodemanager.ui.port }}
  wait_for: port={{ nodemanager.ui.port }}
